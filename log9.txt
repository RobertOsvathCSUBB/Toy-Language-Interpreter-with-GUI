
------------------------

ID: 9
ExeStack:
{ Ref(int) v1 | Ref(int) v2 | Ref(int) v3 | int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ Ref(int) v1; Ref(int) v2 | Ref(int) v3 | int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ Ref(int) v1; Ref(int) v2 | Ref(int) v3 | int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ Ref(int) v2 | Ref(int) v3 | int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ Ref(int) v2 | Ref(int) v3 | int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ Ref(int) v2; Ref(int) v3 | int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ Ref(int) v2; Ref(int) v3 | int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ Ref(int) v3 | int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); v2 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ Ref(int) v3 | int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); v2 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ Ref(int) v3; int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); v2 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ Ref(int) v3; int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); v2 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ int cnt | new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ int cnt; new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ int cnt; new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ v1 -> (0, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (0, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v1, 2) | new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (0, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v1, 2); new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (0, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v1, 2); new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (0, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v2, 3) | new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v2, 3); new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v2, 3); new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (0, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (2, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v3, 4) | newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (2, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v3, 4); newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (2, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ new(v3, 4); newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (2, int); v3 -> (0, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ newLatch(cnt, rH(v2)) | fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ newLatch(cnt, rH(v2)); fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ newLatch(cnt, rH(v2)); fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 0; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ }



------------------------


------------------------

ID: 9
ExeStack:
{ fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))) | await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))); await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ fork(wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)))); await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt) | print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ wH(v1, rH(v1) * 10) | print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ wH(v1, rH(v1) * 10); print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ wH(v1, rH(v1) * 10); print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 2; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ print(rH(v1)) | countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ print(rH(v1)); countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ print(rH(v1)); countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ countDown(cnt) | fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ countDown(cnt); fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 11
ExeStack:
{ countDown(cnt); fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 3; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 11
ExeStack:
{ fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 11
ExeStack:
{ fork(wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt))); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 11
ExeStack:
{ }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ wH(v2, rH(v2) * 10) | print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ wH(v2, rH(v2) * 10); print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ wH(v2, rH(v2) * 10); print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 3; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ print(rH(v2)) | countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ print(rH(v2)); countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ print(rH(v2)); countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ countDown(cnt) | fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ countDown(cnt); fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 12
ExeStack:
{ countDown(cnt); fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 2; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 12
ExeStack:
{ fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 12
ExeStack:
{ fork(wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt)); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 12
ExeStack:
{ }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 13
ExeStack:
{ wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 13
ExeStack:
{ wH(v3, rH(v3) * 10) | print(rH(v3)) | countDown(cnt); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 13
ExeStack:
{ wH(v3, rH(v3) * 10); print(rH(v3)) | countDown(cnt); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 13
ExeStack:
{ wH(v3, rH(v3) * 10); print(rH(v3)) | countDown(cnt); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 4; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 13
ExeStack:
{ print(rH(v3)) | countDown(cnt); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 13
ExeStack:
{ print(rH(v3)) | countDown(cnt); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 13
ExeStack:
{ print(rH(v3)); countDown(cnt); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 13
ExeStack:
{ print(rH(v3)); countDown(cnt); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 13
ExeStack:
{ countDown(cnt); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 13
ExeStack:
{ countDown(cnt); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 1; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 13
ExeStack:
{ }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ await(cnt); print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ print(100) | countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ print(100); countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ print(100); countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, 100, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ countDown(cnt) | print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, 100, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ countDown(cnt); print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, 100, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ countDown(cnt); print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, 100, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, 100, 9, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ print(100); }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, 100, 9, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------


------------------------

ID: 9
ExeStack:
{ }
SymTable:
{ cnt -> 1; v1 -> (1, int); v2 -> (2, int); v3 -> (3, int); }
Out:
[ 20, 11, 30, 12, 40, 13, 100, 9, 100, ]
FileTable:
{ }
Heap:
{ 1 -> 20; 2 -> 30; 3 -> 40; }
LatchTable:
{ 1 -> 0; }



------------------------

